name: Windows CI
on:
  push:
    branches:
      - master
      - test-with-podman
      - houcine/test-with-podman
      - '[1-9]+.[0-9]+.x'
  pull_request:
    branches:
      - master
      - '[1-9]+.[0-9]+.x'
jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        java: ['17.0.12']
    steps:
      - uses: actions/checkout@v4

      - name: Install Podman via Chocolatey
        run: choco install podman-cli -y
        shell: cmd     
          
      - name: Initialize Podman Machine
        shell: powershell
        run: |
          # Initialize and start Podman machine
          podman machine init --cpus 2 --memory 4096
          podman machine start
          
          # Wait for Podman to be ready
          $timeout = 60
          $timer = 0
          do {
            Start-Sleep -Seconds 5
            $timer += 5
            $status = podman system connection list --format json | ConvertFrom-Json
          } while ($timer -lt $timeout -and $status.Count -eq 0)
          
          # Verify Podman is working
          podman version
          
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
          
      - name: Setup GraalVM
        uses: graalvm/setup-graalvm@v1.3.3
        with:
          distribution: 'graalvm'
          java-version: ${{ matrix.java }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Configure Testcontainers for Podman
        shell: powershell
        run: |
          # Configure Testcontainers to use Podman
          echo "TESTCONTAINERS_DOCKER_SOCKET_OVERRIDE=/var/run/user/1000/podman/podman.sock" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "DOCKER_HOST=unix:///var/run/user/1000/podman/podman.sock" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "TESTCONTAINERS_HOST_OVERRIDE=localhost" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          
      - name: Build with Maven
        shell: cmd
        run: |
          .\mvnw install -Dinvoker.skip=true && .\mvnw verify
        env:
          TESTCONTAINERS_RYUK_DISABLED: true
          GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
          GRADLE_ENTERPRISE_CACHE_USERNAME: ${{ secrets.GRADLE_ENTERPRISE_CACHE_USERNAME }}
          GRADLE_ENTERPRISE_CACHE_PASSWORD: ${{ secrets.GRADLE_ENTERPRISE_CACHE_PASSWORD }}
          
      - name: Cleanup Podman Machine
        if: always()
        shell: powershell
        run: |
          # Stop and remove Podman machine to clean up resources
          podman machine stop
          podman machine rm -f
